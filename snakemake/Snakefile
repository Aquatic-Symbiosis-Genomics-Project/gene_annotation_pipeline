"""
==============================
Snakemake annotation pipeline
==============================
- USAGE - locally - whilst using the annotation environment
    snakemake --configfile config_file.yaml --cores 10

- USAGE - cluster - whilst using the annotation environment
    snakemake --configfile config_file.yaml --cores 10 --cluster-config
    ./cluster.yaml --cluster "bsub -q {cluster.queue} -oo {cluster.output}
    -eo {cluster.error} -M {cluster.memory} -R {cluster.resources} -J {cluster.jobname}"
    -j 12

shamelessly stolen from Damon
"""

import os
import errno

scripts = '../../braker'

rule all:
   input: 's3_braker/s2_done'

rule s0_mask_genome:
    input:
      config['genome'],
      config['repeatLibrary']
    output:
       "s0_mask_genome/infile.fa.masked"
    shell:
       "cd s0_mask_genome",
       "bash {scripts}/repeat_masker.bash {input}"

rule s1_extract_fastq:
    input:
      config['bam']
    output:
        a = "s1_bam2fastq/R1.fq.gz", b = "s1_bam2fastq/R2.fq.gz", c = "s1_bam2fastq/R0.fq.gz"
    shell:
        "samtools fastq -1 {output.a} -2 {output.b} -0 {output.c} {input}; "
        "pigz -p 12 -9 s1_bam2fastq/*.fq"

rule s2_alignment:
    input:
      "s0_mask_genome/infile.fa.masked",
      "s1_bam2fastq/R1.fq.gz",
      "s1_bam2fastq/R2.fq.gz"
    output:
      's2_alignment/out2Aligned.out.bam'
    shell:
      "bash {scripts}/star.bash {input} s2_alignment"

rule s3_braker:
     input:
       "s0_mask_genome/infile.fa.masked",
       "s2_alignment/out2Aligned.out.bam",
       "s3_braker"
     output:
       "s3_braker/s2_done"
     params:
        species = config['species']
     shell:
       "bash ../braker/braker_test.bash {input} {params.species};"
       " touch s3_braker/s3_done"
